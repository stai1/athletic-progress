{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/activity.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/strava-api.service.ts","webpack:///src/app/token.service.ts","webpack:///src/app/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","PER_PAGE","ActivityService","stravaAPI","activities","newActivities","recursiveLoadActivities","page","getLoggedInAthleteActivities","per_page","pipe","length","filter","item","map","summary_polyline","i","name","distance","type","start_date","polyline","concat","next","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","route","router","tokenService","authenticated","events","subscribe","event","snapshot","queryParams","token","error","status","goToAuthorizationPage","alert","window","location","href","client_id","response_type","redirect_uri","protocol","host","pathname","approval_prompt","scope","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MapComponent","activityService","lineStyle","stroke","color","width","autoMove","userInteracted","pathLayerSource","wrapX","topoSource","url","standardSource","mapSource","target","layers","source","view","center","zoom","userInputFunction","on","addActivitiesToMap","fitAll","loadAllActivities","result","console","log","extent","getExtent","getView","fit","activity","points","readGeometry","dataProjection","featureProjection","simplify","lineFeature","geometry","setStyle","addFeature","API_PATH","StravaAPIService","http","params","get","headers","Authorization","accessToken","TokenService","serverPath","authServer","post","data","setTokens","refresh","_refreshToken","refresh_token","_accessToken","access_token","refreshToken","makeUrl","path","Object","v","join","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Activity } from './activity';\nimport { StravaAPIService } from './strava-api.service';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, catchError } from 'rxjs/operators';\nconst PER_PAGE = 100;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  public activities: Activity[] = [];\n\n  public newActivities = new Subject<Activity[]>();\n\n  constructor(\n    private stravaAPI : StravaAPIService,\n  ) { }\n\n  loadAllActivities(): Observable<boolean> {\n    return this.recursiveLoadActivities();\n  }\n\n  private recursiveLoadActivities(page = 1): Observable<boolean> {\n    return this.stravaAPI.getLoggedInAthleteActivities({ page: page, per_page: PER_PAGE}).pipe(\n      switchMap(\n        activities => {\n          if(activities.length > 0) {\n            activities = activities.filter(\n              item => item.map && item.map.summary_polyline\n            ).map(i =>\n              { return { id: i.id, name: i.name, distance: i.distance, type: i.type, start_date: i.start_date, polyline: i.map.summary_polyline } }\n            );\n            this.activities = this.activities.concat(activities);\n            this.newActivities.next(activities);\n            return this.recursiveLoadActivities(page + 1);\n          }\n          else\n            return of(true);\n        }\n      ),\n      catchError(\n        (e) => of(false)\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, RouterEvent, NavigationEnd } from '@angular/router';\nimport { makeUrl } from './utils';\nimport { TokenService } from './token.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public authenticated = false;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private tokenService: TokenService,\n  ) {\n    this.router.events.subscribe(\n      (event: RouterEvent) => {\n        if (event instanceof NavigationEnd) {\n          if(this.route.snapshot.queryParams.code) {\n            this.tokenService.token(this.route.snapshot.queryParams.code).subscribe(\n              () => this.authenticated = true,\n              (error: HttpErrorResponse) => {\n                if(error.status === 400)\n                  this.goToAuthorizationPage();\n                else\n                  alert(\"Unable to authorize\");\n              }\n            );\n          }\n          else\n            this.goToAuthorizationPage();\n        }\n\n      }\n    );\n  }\n  ngOnInit(): void {\n  }\n\n  goToAuthorizationPage(): void {\n    window.location.href = makeUrl(\n      'https://www.strava.com/oauth/authorize',\n      {\n        client_id: 36433,\n        response_type: 'code',\n        redirect_uri: `${location.protocol}//${location.host}${location.pathname}`,\n        approval_prompt: 'force',\n        scope:\"activity:read,activity:read_all\"\n      }\n    );\n  }\n\n}\n","<ng-container *ngIf=\"authenticated\">\n  <app-map></app-map>\n</ng-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, AfterViewInit } from '@angular/core';\nimport { defaults as defaultControls } from 'ol/control';\n\nimport {Map, View, Feature } from 'ol';\nimport {fromLonLat, toLonLat, transform} from 'ol/proj';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport VectorSource from 'ol/source/Vector';\nimport {OSM, XYZ} from 'ol/source'; \nimport {LineString, MultiPoint, Point} from 'ol/geom';\nimport {Style, Stroke, Circle, Fill} from 'ol/style';\nimport Polyline from 'ol/format/Polyline';\nimport ZoomToExtent from 'ol/control/ZoomToExtent';\n\nimport { ActivityService } from '../activity.service';\nimport { Activity } from '../activity';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements AfterViewInit {\n  map: Map;\n\n  lineStyle = new Style({\n    stroke: new Stroke({\n      color: '#ff0000',\n      width: 2\n    })\n  });\n\n  autoMove: boolean = true;\n  userInteracted: boolean = false; // set to and stays true on first user interaction with map\n  \n  pathLayerSource = new VectorSource({ wrapX: true});\n\n  constructor(\n    private activityService: ActivityService,\n  ) {\n\n  }\n\n\n  ngAfterViewInit() {\n    let topoSource = new XYZ({\n      url: 'https://{a-c}.tile.opentopomap.org/{z}/{x}/{y}.png'\n    });\n    let standardSource = new XYZ({\n      url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n    });\n\n    let mapSource = new OSM();\n\n    this.map = new Map({\n      target: 'map',\n      layers: [\n        new TileLayer({source: mapSource}),\n        new VectorLayer({ source: this.pathLayerSource}),\n      ],\n      view: new View({\n        center: fromLonLat([0,0]),\n        zoom: 0,\n      }),\n    });\n\n    let userInputFunction = () => {\n      this.userInteracted = true;\n    };\n\n    this.map.on('pointerdown', userInputFunction)\n    this.map.on('movestart', () => {\n      if(!this.autoMove) \n        this.userInteracted = true;\n    })\n    this.map.on('moveend', () => {\n      this.autoMove = false;\n    });\n\n    this.activityService.newActivities.subscribe(\n      activities => {\n        this.addActivitiesToMap(activities);\n        if(!this.userInteracted) {\n          this.autoMove = true;\n          this.fitAll();\n        }\n      }\n    );\n    this.activityService.loadAllActivities().subscribe(\n      (result) => {\n        console.log(`activities: ${this.activityService.activities.length}`);\n        let extent = this.pathLayerSource.getExtent();\n      }\n    );\n  }\n\n  fitAll() {\n    let extent = this.pathLayerSource.getExtent();\n    this.map.getView().fit(extent);\n  }\n\n  addActivitiesToMap(activities: Activity[]): void {\n    for(let activity of activities) {\n      let points = [[-121.96255081, 37.54584115], [-121.96252377, 37.54584736], [-121.9624995, 37.54585315]].map(item => fromLonLat(item));\n      activity.polyline;\n\n      let route = (new Polyline().readGeometry(\n        activity.polyline,\n        {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        }\n      )).simplify(0.06);\n      let lineFeature = new Feature({ geometry: route});\n      lineFeature.setStyle(this.lineStyle);\n      this.pathLayerSource.addFeature(lineFeature);\n\n    }\n    \n  }\n\n\n}\n","<div id=\"map\" class=\"map\"></div>","import { Injectable } from '@angular/core';\nimport { TokenService } from './token.service';\nimport { HttpClient } from '@angular/common/http';\nimport { makeUrl } from './utils';\nimport { Observable } from 'rxjs';\n\n\nconst API_PATH = \"https://www.strava.com/api/v3/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StravaAPIService {\n\n  constructor(\n    private http: HttpClient,\n    private tokenService: TokenService,\n  ) { }\n\n  getLoggedInAthleteActivities(params: any): Observable<any[]> {\n    return <Observable<any[]>> this.http.get(\n      makeUrl(API_PATH + \"athlete/activities\", params),\n      { headers: { Authorization: `Bearer ${this.tokenService.accessToken}` } }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private serverPath = environment.authServer;\n  private _accessToken: string;\n  private _refreshToken: string;\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  public get accessToken() {\n    return this._accessToken;\n  }\n\n  public get refreshToken() {\n    return this._refreshToken;\n  }\n\n  token(code: string): Observable<any> {\n    return this.http.post(this.serverPath+'token', { code: code }).pipe(\n      tap(\n        data => {\n          this.setTokens(data);\n        }\n      )\n    );\n  }\n\n  refresh(refresh?: string): Observable<any> {\n    refresh = refresh || this._refreshToken || \"\";\n    return this.http.post(this.serverPath+'refresh', { refresh_token: refresh }).pipe(\n      tap(\n        data => {\n          this.setTokens(data);\n        }\n      )\n    );\n  }\n\n  private setTokens(data) {\n    this._accessToken = data.access_token;\n    this._refreshToken = data.refreshToken;\n  }\n}\n","export function makeUrl(path: string, queryParams?: { [key: string]: string | number }): string{\n  return path + (!queryParams || Object.keys(queryParams).length === 0 ? '' : '?' + Object.keys(queryParams).map(v => v + '=' + queryParams[v]).join('&'));\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  authServer: \"http://localhost:8080/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}